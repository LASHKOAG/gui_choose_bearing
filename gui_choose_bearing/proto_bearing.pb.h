// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_bearing.proto

#ifndef PROTOBUF_proto_5fbearing_2eproto__INCLUDED
#define PROTOBUF_proto_5fbearing_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace package_bearing {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_proto_5fbearing_2eproto();
void protobuf_AssignDesc_proto_5fbearing_2eproto();
void protobuf_ShutdownFile_proto_5fbearing_2eproto();

class Message_bearing;

// ===================================================================

class Message_bearing : public ::google::protobuf::Message {
 public:
  Message_bearing();
  virtual ~Message_bearing();

  Message_bearing(const Message_bearing& from);

  inline Message_bearing& operator=(const Message_bearing& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Message_bearing& default_instance();

  void Swap(Message_bearing* other);

  // implements Message ----------------------------------------------

  Message_bearing* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Message_bearing& from);
  void MergeFrom(const Message_bearing& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string bearing_name = 1;
  inline bool has_bearing_name() const;
  inline void clear_bearing_name();
  static const int kBearingNameFieldNumber = 1;
  inline const ::std::string& bearing_name() const;
  inline void set_bearing_name(const ::std::string& value);
  inline void set_bearing_name(const char* value);
  inline void set_bearing_name(const char* value, size_t size);
  inline ::std::string* mutable_bearing_name();
  inline ::std::string* release_bearing_name();
  inline void set_allocated_bearing_name(::std::string* bearing_name);

  // optional int32 bearing_diameter_outer_race = 2;
  inline bool has_bearing_diameter_outer_race() const;
  inline void clear_bearing_diameter_outer_race();
  static const int kBearingDiameterOuterRaceFieldNumber = 2;
  inline ::google::protobuf::int32 bearing_diameter_outer_race() const;
  inline void set_bearing_diameter_outer_race(::google::protobuf::int32 value);

  // optional int32 bearing_diameter_inner_race = 3;
  inline bool has_bearing_diameter_inner_race() const;
  inline void clear_bearing_diameter_inner_race();
  static const int kBearingDiameterInnerRaceFieldNumber = 3;
  inline ::google::protobuf::int32 bearing_diameter_inner_race() const;
  inline void set_bearing_diameter_inner_race(::google::protobuf::int32 value);

  // optional int32 bearing_diameter_roller = 4;
  inline bool has_bearing_diameter_roller() const;
  inline void clear_bearing_diameter_roller();
  static const int kBearingDiameterRollerFieldNumber = 4;
  inline ::google::protobuf::int32 bearing_diameter_roller() const;
  inline void set_bearing_diameter_roller(::google::protobuf::int32 value);

  // optional float bearing_roller_angle = 5;
  inline bool has_bearing_roller_angle() const;
  inline void clear_bearing_roller_angle();
  static const int kBearingRollerAngleFieldNumber = 5;
  inline float bearing_roller_angle() const;
  inline void set_bearing_roller_angle(float value);

  // optional int32 bearing_roller_number = 6;
  inline bool has_bearing_roller_number() const;
  inline void clear_bearing_roller_number();
  static const int kBearingRollerNumberFieldNumber = 6;
  inline ::google::protobuf::int32 bearing_roller_number() const;
  inline void set_bearing_roller_number(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:package_bearing.Message_bearing)
 private:
  inline void set_has_bearing_name();
  inline void clear_has_bearing_name();
  inline void set_has_bearing_diameter_outer_race();
  inline void clear_has_bearing_diameter_outer_race();
  inline void set_has_bearing_diameter_inner_race();
  inline void clear_has_bearing_diameter_inner_race();
  inline void set_has_bearing_diameter_roller();
  inline void clear_has_bearing_diameter_roller();
  inline void set_has_bearing_roller_angle();
  inline void clear_has_bearing_roller_angle();
  inline void set_has_bearing_roller_number();
  inline void clear_has_bearing_roller_number();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* bearing_name_;
  ::google::protobuf::int32 bearing_diameter_outer_race_;
  ::google::protobuf::int32 bearing_diameter_inner_race_;
  ::google::protobuf::int32 bearing_diameter_roller_;
  float bearing_roller_angle_;
  ::google::protobuf::int32 bearing_roller_number_;
  friend void  protobuf_AddDesc_proto_5fbearing_2eproto();
  friend void protobuf_AssignDesc_proto_5fbearing_2eproto();
  friend void protobuf_ShutdownFile_proto_5fbearing_2eproto();

  void InitAsDefaultInstance();
  static Message_bearing* default_instance_;
};
// ===================================================================


// ===================================================================

// Message_bearing

// optional string bearing_name = 1;
inline bool Message_bearing::has_bearing_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Message_bearing::set_has_bearing_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Message_bearing::clear_has_bearing_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Message_bearing::clear_bearing_name() {
  if (bearing_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bearing_name_->clear();
  }
  clear_has_bearing_name();
}
inline const ::std::string& Message_bearing::bearing_name() const {
  // @@protoc_insertion_point(field_get:package_bearing.Message_bearing.bearing_name)
  return *bearing_name_;
}
inline void Message_bearing::set_bearing_name(const ::std::string& value) {
  set_has_bearing_name();
  if (bearing_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bearing_name_ = new ::std::string;
  }
  bearing_name_->assign(value);
  // @@protoc_insertion_point(field_set:package_bearing.Message_bearing.bearing_name)
}
inline void Message_bearing::set_bearing_name(const char* value) {
  set_has_bearing_name();
  if (bearing_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bearing_name_ = new ::std::string;
  }
  bearing_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:package_bearing.Message_bearing.bearing_name)
}
inline void Message_bearing::set_bearing_name(const char* value, size_t size) {
  set_has_bearing_name();
  if (bearing_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bearing_name_ = new ::std::string;
  }
  bearing_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:package_bearing.Message_bearing.bearing_name)
}
inline ::std::string* Message_bearing::mutable_bearing_name() {
  set_has_bearing_name();
  if (bearing_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    bearing_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:package_bearing.Message_bearing.bearing_name)
  return bearing_name_;
}
inline ::std::string* Message_bearing::release_bearing_name() {
  clear_has_bearing_name();
  if (bearing_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = bearing_name_;
    bearing_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Message_bearing::set_allocated_bearing_name(::std::string* bearing_name) {
  if (bearing_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete bearing_name_;
  }
  if (bearing_name) {
    set_has_bearing_name();
    bearing_name_ = bearing_name;
  } else {
    clear_has_bearing_name();
    bearing_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:package_bearing.Message_bearing.bearing_name)
}

// optional int32 bearing_diameter_outer_race = 2;
inline bool Message_bearing::has_bearing_diameter_outer_race() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Message_bearing::set_has_bearing_diameter_outer_race() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Message_bearing::clear_has_bearing_diameter_outer_race() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Message_bearing::clear_bearing_diameter_outer_race() {
  bearing_diameter_outer_race_ = 0;
  clear_has_bearing_diameter_outer_race();
}
inline ::google::protobuf::int32 Message_bearing::bearing_diameter_outer_race() const {
  // @@protoc_insertion_point(field_get:package_bearing.Message_bearing.bearing_diameter_outer_race)
  return bearing_diameter_outer_race_;
}
inline void Message_bearing::set_bearing_diameter_outer_race(::google::protobuf::int32 value) {
  set_has_bearing_diameter_outer_race();
  bearing_diameter_outer_race_ = value;
  // @@protoc_insertion_point(field_set:package_bearing.Message_bearing.bearing_diameter_outer_race)
}

// optional int32 bearing_diameter_inner_race = 3;
inline bool Message_bearing::has_bearing_diameter_inner_race() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Message_bearing::set_has_bearing_diameter_inner_race() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Message_bearing::clear_has_bearing_diameter_inner_race() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Message_bearing::clear_bearing_diameter_inner_race() {
  bearing_diameter_inner_race_ = 0;
  clear_has_bearing_diameter_inner_race();
}
inline ::google::protobuf::int32 Message_bearing::bearing_diameter_inner_race() const {
  // @@protoc_insertion_point(field_get:package_bearing.Message_bearing.bearing_diameter_inner_race)
  return bearing_diameter_inner_race_;
}
inline void Message_bearing::set_bearing_diameter_inner_race(::google::protobuf::int32 value) {
  set_has_bearing_diameter_inner_race();
  bearing_diameter_inner_race_ = value;
  // @@protoc_insertion_point(field_set:package_bearing.Message_bearing.bearing_diameter_inner_race)
}

// optional int32 bearing_diameter_roller = 4;
inline bool Message_bearing::has_bearing_diameter_roller() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Message_bearing::set_has_bearing_diameter_roller() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Message_bearing::clear_has_bearing_diameter_roller() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Message_bearing::clear_bearing_diameter_roller() {
  bearing_diameter_roller_ = 0;
  clear_has_bearing_diameter_roller();
}
inline ::google::protobuf::int32 Message_bearing::bearing_diameter_roller() const {
  // @@protoc_insertion_point(field_get:package_bearing.Message_bearing.bearing_diameter_roller)
  return bearing_diameter_roller_;
}
inline void Message_bearing::set_bearing_diameter_roller(::google::protobuf::int32 value) {
  set_has_bearing_diameter_roller();
  bearing_diameter_roller_ = value;
  // @@protoc_insertion_point(field_set:package_bearing.Message_bearing.bearing_diameter_roller)
}

// optional float bearing_roller_angle = 5;
inline bool Message_bearing::has_bearing_roller_angle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Message_bearing::set_has_bearing_roller_angle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Message_bearing::clear_has_bearing_roller_angle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Message_bearing::clear_bearing_roller_angle() {
  bearing_roller_angle_ = 0;
  clear_has_bearing_roller_angle();
}
inline float Message_bearing::bearing_roller_angle() const {
  // @@protoc_insertion_point(field_get:package_bearing.Message_bearing.bearing_roller_angle)
  return bearing_roller_angle_;
}
inline void Message_bearing::set_bearing_roller_angle(float value) {
  set_has_bearing_roller_angle();
  bearing_roller_angle_ = value;
  // @@protoc_insertion_point(field_set:package_bearing.Message_bearing.bearing_roller_angle)
}

// optional int32 bearing_roller_number = 6;
inline bool Message_bearing::has_bearing_roller_number() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Message_bearing::set_has_bearing_roller_number() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Message_bearing::clear_has_bearing_roller_number() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Message_bearing::clear_bearing_roller_number() {
  bearing_roller_number_ = 0;
  clear_has_bearing_roller_number();
}
inline ::google::protobuf::int32 Message_bearing::bearing_roller_number() const {
  // @@protoc_insertion_point(field_get:package_bearing.Message_bearing.bearing_roller_number)
  return bearing_roller_number_;
}
inline void Message_bearing::set_bearing_roller_number(::google::protobuf::int32 value) {
  set_has_bearing_roller_number();
  bearing_roller_number_ = value;
  // @@protoc_insertion_point(field_set:package_bearing.Message_bearing.bearing_roller_number)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace package_bearing

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fbearing_2eproto__INCLUDED
